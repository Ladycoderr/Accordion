{"version":3,"sources":["Component/accordion/Api.js","Component/accordion/MyAccordion.js","Component/accordion/Accordion.js","App.js","reportWebVitals.js","index.js"],"names":["questions","id","question","answer","MyAcoordion","useState","show","setShow","className","onClick","Accordion","map","curr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAaA,G,MAAU,CACvB,CACIC,GAAG,EACHC,SAAU,0BACVC,OAAO,iKAEX,CACIF,GAAG,EACHC,SAAU,8CACVC,OAAO,wJAGX,CACIF,GAAG,EACHC,SAAU,qBACVC,OAAO,wIAEX,CACIF,GAAG,EACHC,SAAU,yCACVC,OAAO,qMAGX,CACIF,GAAG,EACHC,SAAU,+CACVC,OAAO,sPAGX,CACIF,GAAG,EACHC,SAAU,+CACVC,OAAO,oK,cCnBIC,EAZG,SAAC,GAAwB,IAAvBF,EAAsB,EAAtBA,SAASC,EAAa,EAAbA,OAAOF,EAAM,EAANA,GAChC,EAAoBI,oBAAS,GAA7B,mBAAMC,EAAN,KAAWC,EAAX,KAED,OAAO,qCACP,sBAAKC,UAAU,eAAf,UACI,mBAAGA,UAAU,MAAMC,QAAS,kBAAIF,GAASD,IAAzC,SAAiDA,EAAK,SAAI,WAC1D,+BAAKL,EAAL,KAAW,KAAX,IAAkBC,QAElBI,GAAQ,mBAAGE,UAAU,UAAb,SAAwBL,QCWxBO,EAfC,WAEZ,OAAO,mCACP,0BAASF,UAAU,WAAnB,UACA,mEAEIR,EAAUW,KAAI,SAACC,GAEX,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAKX,aCH3BY,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9706ff22.chunk.js","sourcesContent":["export const questions=[\r\n{\r\n    id:1,\r\n    question: 'What is data-structure?',\r\n    answer:'Data structure is a way of defining, storing & retriving of data in a structural & systemetic way. A data structure may contain different type of data items.'\r\n},\r\n{\r\n    id:2,\r\n    question: 'What are various data-structures available?',\r\n    answer:'Data structure availability may vary by programming languages. Commonly available data structures are list, arrays, stack, queues, graph, tree etc..'\r\n\r\n},\r\n{\r\n    id:3,\r\n    question: 'What is algorithm?',\r\n    answer:'Algorithm is a step by step procedure, which defines a set of instructions to be executed in certain order to get the desired output',\r\n},\r\n{\r\n    id:4,\r\n    question: 'Why we need to do algorithm analysis??',\r\n    answer:'A problem can be solved in more than one ways. So, many solution algorithms can be derived for a given problem. We analyze available algorithms to find and implement the best suitable algorithm',\r\n\r\n},\r\n{\r\n    id:5,\r\n    question: 'What is asymptotic analysis of an algorithm?',\r\n    answer:'Asymptotic analysis of an algorithm, refers to defining the mathematical boundation/framing of its run-time performance. Using asymptotic analysis, we can very well conclude the best case, average case and worst case scenario of an algorithm.'\r\n\r\n},\r\n{\r\n    id:6,\r\n    question: 'What are the criteria of algorithm analysis?',\r\n    answer:'An algorithm are generally analyzed on two factors − time and space. That is, how much execution time and how much extra space required by the algorithm.'\r\n\r\n},\r\n\r\n]","import React, { useState } from \"react\";\r\nconst MyAcoordion=({question,answer,id})=>{\r\n    const[show,setShow]=useState(false);\r\n   \r\n   return(<>\r\n   <div className=\"main-heading\">\r\n       <p className=\"btn\" onClick={()=>setShow(!show)}>{show?\"➖\":\"➕\"}</p> \r\n       <h3>{id}. {\"  \"} {question}</h3>\r\n   </div>\r\n     { show && <p className=\"answers\">{answer}</p>}\r\n   </>);\r\n    \r\n}\r\nexport default MyAcoordion;","import React from 'react';\r\nimport './Accordion.css';\r\nimport { questions } from './Api';\r\nimport MyAcoordion from \"./MyAccordion\";\r\n\r\nconst Accordion=()=>{\r\n \r\n    return(<>\r\n    <section className=\"main-div\">\r\n    <h1>DataStructure Interview Questions</h1>\r\n    {\r\n        questions.map((curr)=>\r\n        {\r\n            return <MyAcoordion key={curr.id}{...curr}/>;\r\n        })\r\n    }\r\n    </section>\r\n\r\n    </>);\r\n}\r\nexport default Accordion;","import './App.css';\nimport Accordion from \"../src/Component/accordion/Accordion\";\n\n\nfunction App() {\n  return (\n    <Accordion/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}